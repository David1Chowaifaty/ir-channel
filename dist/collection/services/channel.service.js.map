{"version":3,"file":"channel.service.js","sourceRoot":"","sources":["../../src/services/channel.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Token } from '@/models/Token';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport channels_data from '@/stores/channel.store';\r\nimport axios from 'axios';\r\n\r\nexport class ChannelService extends Token {\r\n  public async getExposedChannels() {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Channels?Ticket=${token}`, {});\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const results = data.My_Result;\r\n        channels_data.channels = [...results];\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedConnectedChannels(property_id: number) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Connected_Channels?Ticket=${token}`, { property_id });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        channels_data.connected_channels = [...data.My_Result];\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async saveConnectedChannel(is_remove: boolean) {\r\n    try {\r\n      const body = {\r\n        id: channels_data.channel_id,\r\n        title: channels_data.channel_settings.hotel_title,\r\n        is_active: channels_data.is_active,\r\n        channel: { id: channels_data.selectedChannel.id, name: channels_data.selectedChannel.name },\r\n        property: { id: calendar_data.id, name: calendar_data.name },\r\n        map: channels_data.mappedChannels,\r\n        is_remove,\r\n      };\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new Error('Invalid Token');\r\n      }\r\n      const { data } = await axios.post(`/Handle_Connected_Channel?Ticket=${token}`, body);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n"]}