{"version":3,"file":"igl-booking-rooms.js","sourceRoot":"","sources":["../../../../src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-booking-rooms',\r\n  styleUrl: 'igl-booking-rooms.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop() roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: Map<string, any>;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @Prop() isBookDisabled: boolean;\r\n  @Prop() initialRoomIds: any;\r\n  @State() roomsDistributions: number[] = [];\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  componentWillLoad() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private initializeRoomData() {\r\n    const { inventory, rateplans } = this.roomTypeData;\r\n    this.totalRooms = inventory || 0;\r\n    this.selectedRooms = new Array(rateplans.length).fill(0);\r\n    this.roomsDistributions = this.calculateInitialDistributions(rateplans, inventory);\r\n  }\r\n  @Watch('roomTypeData')\r\n  handleRoomTypeData() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private calculateInitialDistributions(rateplans, inventory) {\r\n    let distributions = new Array(rateplans.length).fill(inventory);\r\n    if (this.defaultData && this.bookingType !== 'EDIT_BOOKING' && inventory > 0) {\r\n      let selectedIndexes = [];\r\n      let sum = 0;\r\n      this.defaultData.forEach(category => {\r\n        this.selectedRooms[category.index] = category.totalRooms;\r\n        distributions[category.index] = category.totalRooms;\r\n        sum += category.totalRooms;\r\n        selectedIndexes.push(category.index);\r\n      });\r\n      if (selectedIndexes.length < distributions.length) {\r\n        distributions.forEach((_, index) => {\r\n          if (!selectedIndexes.includes(index)) {\r\n            if (sum === this.totalRooms) {\r\n              distributions[index] = 0;\r\n            } else {\r\n              distributions[index] = distributions[index] - sum;\r\n            }\r\n          } else {\r\n            if (sum < this.totalRooms) {\r\n              distributions[index] = this.totalRooms - sum + distributions[index];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      distributions.fill(inventory);\r\n    }\r\n    return distributions;\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    const {\r\n      detail: { data, changedKey },\r\n    } = event;\r\n    let updatedData = { ...data };\r\n\r\n    if (changedKey === 'totalRooms') {\r\n      this.handleTotalRoomsUpdate(index, updatedData.totalRooms);\r\n    }\r\n\r\n    updatedData = {\r\n      ...updatedData,\r\n      roomCategoryId: this.roomTypeData.id,\r\n      roomCategoryName: this.roomTypeData.name,\r\n      inventory: this.roomTypeData.inventory,\r\n    };\r\n\r\n    this.dataUpdateEvent.emit({ key: data.key, data: updatedData, changedKey });\r\n  }\r\n\r\n  private handleTotalRoomsUpdate(index: number, newValue: number) {\r\n    if (this.selectedRooms[index] !== newValue) {\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n  }\r\n\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = excludedIndex => {\r\n      return this.selectedRooms.reduce((acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc), 0);\r\n    };\r\n    const newRoomsDistributions = this.selectedRooms.map((_, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return this.roomsDistributions[index];\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent = calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms = this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n\r\n    if (JSON.stringify(this.roomsDistributions) !== JSON.stringify(newRoomsDistributions)) {\r\n      this.roomsDistributions = [...newRoomsDistributions];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && this.roomTypeData.rateplans.length > 0 && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomTypeData.name}</div>}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomTypeData.id;\r\n            let roomId = -1;\r\n            if (shouldBeDisabled && this.initialRoomIds) {\r\n              roomId = this.initialRoomIds.roomId;\r\n            }\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                is_bed_configuration_enabled={this.roomTypeData.is_bed_configuration_enabled}\r\n                index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={(this.defaultData && this.defaultData.get(`p_${ratePlan.id}`)) || null}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                onDataUpdateEvent={evt => this.onRoomDataUpdate(evt, index)}\r\n                physicalrooms={this.roomTypeData.physicalrooms}\r\n                defaultRoomId={roomId}\r\n                selectedRoom={this.initialRoomIds}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}