{"version":3,"file":"ir-date-view.js","sourceRoot":"","sources":["../../../src/components/ir-date-view/ir-date-view.tsx"],"names":[],"mappings":"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","sourcesContent":["import locales from '@/stores/locales.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-date-view',\r\n  styleUrl: 'ir-date-view.css',\r\n  scoped: true,\r\n})\r\nexport class IrDateView {\r\n  @Prop() from_date: string | Date | moment.Moment;\r\n  @Prop() to_date: string | Date | moment.Moment;\r\n  @Prop() showDateDifference: boolean = true;\r\n  @Prop() dateOption: string = 'YYYY-MM-DD';\r\n  @State() dates: { from_date: string; to_date: string; date_diffrence: number };\r\n  componentWillLoad() {\r\n    this.initializeDates();\r\n  }\r\n  @Watch('from_date')\r\n  handleFromDateChange(newVal: any, oldVal: any) {\r\n    if (newVal !== oldVal) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  @Watch('to_date')\r\n  handleToDateChange(newVal: any, oldVal: any) {\r\n    if (newVal !== oldVal) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  initializeDates() {\r\n    this.convertDate('from_date', this.from_date);\r\n    this.convertDate('to_date', this.to_date);\r\n    const fromDate = moment(this.dates.from_date, 'MMM DD, YYYY').format('YYYY-MM-DD');\r\n    const toDate = moment(this.dates.to_date, 'MMM DD, YYYY').format('YYYY-MM-DD');\r\n    this.dates.date_diffrence = calculateDaysBetweenDates(fromDate, toDate);\r\n  }\r\n\r\n  convertDate(key: 'from_date' | 'to_date', date: string | Date | moment.Moment) {\r\n    this.dates = this.dates || {\r\n      from_date: '',\r\n      to_date: '',\r\n      date_diffrence: 0,\r\n    };\r\n\r\n    if (typeof date === 'string') {\r\n      this.dates[key] = moment(date, this.dateOption).format('MMM DD, YYYY');\r\n    } else if (date instanceof Date) {\r\n      this.dates[key] = moment(date).format('MMM DD, YYYY');\r\n    } else if (moment.isMoment(date)) {\r\n      this.dates[key] = date.format('MMM DD, YYYY');\r\n    } else {\r\n      console.error('Unsupported date type');\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host class=\"d-flex align-items-center\">\r\n        <span>{this.dates.from_date}</span>{' '}\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"mx-01\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\r\n          />\r\n        </svg>\r\n        <span>\r\n          {this.dates.to_date}{' '}\r\n          {this.showDateDifference && (\r\n            <span class=\"mx-01\">\r\n              {this.dates.date_diffrence}\r\n              {'   '}\r\n              {this.dates.date_diffrence > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`}\r\n            </span>\r\n          )}\r\n        </span>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}