{"version":3,"file":"events.utils.js","sourceRoot":"","sources":["../../src/utils/events.utils.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,mBAAmB,EAAE,MAAM,kCAAkC,CAAC;AACvE,OAAO,EAAE,qBAAqB,EAAE,MAAM,SAAS,CAAC;AAEhD,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,GAAG,EAAE,YAAY,EAAE,WAAW,EAAE,eAAe;IACpF,IAAI,CAAC;QACH,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACtD,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,MAAM,MAAM,GAAG,MAAM,mBAAmB,CAAC,kBAAkB,CAAC,WAAW,EAAE,qBAAqB,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,mBAAmB,CAAC,CAAC;QAC1K,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACpB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;gBACjD,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACxC,CAAC;iBAAM,CAAC;gBACN,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC,CAAC,CAAC;QACH,eAAe,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,gBAAgB,CAAC;IACrD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,wBAAwB;IAC1B,CAAC;AACH,CAAC;AACD,MAAM,UAAU,6BAA6B,CAAC,OAAe;IAC3D,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC;IAClD,OAAO,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACpC,CAAC","sourcesContent":["import moment from 'moment';\nimport { ToBeAssignedService } from '../services/toBeAssigned.service';\nimport { dateToFormattedString } from './utils';\n\nexport async function updateCategories(key, calendarData, property_id, unassignedDates) {\n  try {\n    const toBeAssignedService = new ToBeAssignedService();\n    let categorisedRooms = {};\n    const result = await toBeAssignedService.getUnassignedRooms(property_id, dateToFormattedString(new Date(+key)), calendarData.roomsInfo, calendarData.formattedLegendData);\n    result.forEach(room => {\n      if (!categorisedRooms.hasOwnProperty(room.RT_ID)) {\n        categorisedRooms[room.RT_ID] = [room];\n      } else {\n        categorisedRooms[room.RT_ID].push(room);\n      }\n    });\n    unassignedDates[key].categories = categorisedRooms;\n  } catch (error) {\n    //  toastr.error(error);\n  }\n}\nexport function transformDateFormatWithMoment(dateStr: string) {\n  var dateObj = moment(dateStr, 'ddd, DD MMM YYYY');\n  return dateObj.format('D_M_YYYY');\n}\n"]}