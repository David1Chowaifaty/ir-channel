{"file":"events.service-2ae18d18.js","mappings":"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","names":["Token","BookingService","axios","getReleaseHoursString"],"sources":["src/services/events.service.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { BookingService } from './booking.service';\r\nimport { getReleaseHoursString } from '../utils/utils';\r\nimport { Token } from '@/models/Token';\r\n\r\nexport class EventsService extends Token {\r\n  private readonly bookingService: BookingService = new BookingService();\r\n  async reallocateEvent(pool: string, destination_pr_id: number, from_date: string, to_date: string) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        console.log(pool, destination_pr_id, from_date, to_date);\r\n        const { data } = await axios.post(`/ReAllocate_Exposed_Room?Ticket=${token}`, { pool, destination_pr_id, from_date, to_date });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async deleteEvent(POOL: string) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const { data } = await axios.post(`/UnBlock_Exposed_Unit?Ticket=${token}`, {\r\n          POOL,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async updateBlockedEvent(bookingEvent: any) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        const releaseData = getReleaseHoursString(+bookingEvent.RELEASE_AFTER_HOURS);\r\n        await this.deleteEvent(bookingEvent.POOL);\r\n        this.bookingService.setToken(token);\r\n        const result = await this.bookingService.blockUnit({\r\n          from_date: this.formatDate(bookingEvent.FROM_DATE),\r\n          to_date: this.formatDate(bookingEvent.TO_DATE),\r\n          pr_id: bookingEvent.PR_ID,\r\n          STAY_STATUS_CODE: bookingEvent.OUT_OF_SERVICE ? '004' : bookingEvent.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n          DESCRIPTION: bookingEvent.RELEASE_AFTER_HOURS || '',\r\n          NOTES: bookingEvent.OPTIONAL_REASON || '',\r\n          ...releaseData,\r\n        });\r\n        return result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private formatDate(date: string) {\r\n    return date.split('/').join('-');\r\n  }\r\n}\r\n"],"version":3}