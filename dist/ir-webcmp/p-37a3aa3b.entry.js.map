{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfoStyle0","IglApplicationInfo","this","userRate","componentWillLoad","console","log","guestInfo","isRateModified","rateType","rate","dateDifference","guestData","Object","assign","roomId","defaultGuestRoomId","roomsList","filter","e","id","toString","length","preference","defaultGuestPreference","updateRoomList","componentDidLoad","timeout","setTimeout","updateData","disconnectedCallback","clearTimeout","handleSelctedUnits","units","selectedUnits","index","filterdRoomList","includes","name","dataUpdateEvent","emit","key","guestRefKey","data","handleDataChange","value","find","room","handleGuestNameChange","event","guestName","target","handleButtonClicked","detail","isButtonPressed","render","h","Host","class","bookingType","roomCategoryName","ratePlanName","replace","message","cancelation","guarantee","adult_child_offering","v4","type","placeholder","locales","entries","Lcz_GuestFirstnameAndLastname","onInput","required","calendar_data","is_frontdesk_enabled","onChange","selected","Lcz_Assignunits","map","is_bed_configuration_enabled","Lcz_BedConfiguration","bedPreferenceType","CODE_NAME","CODE_VALUE_EN","getCurrencySymbol","currency","code","Number","toFixed","Lcz_Stay","IglBookPropertyService","setBookingInfoFromAutoComplete","context","res","bookedByInfoData","guest","email","firstName","first_name","lastName","last_name","countryId","country_id","isdCode","contactNumber","mobile","selectedArrivalTime","arrival","emailGuest","subscribe_to_news_letter","remark","cardNumber","cardHolderName","expiryMonth","expiryYear","bookingNumber","booking_nbr","rooms","from_date","to_date","resetRoomsInfoAndMessage","defaultData","roomsInfo","onDataRoomUpdate","isEdit","isEditBooking","changedKey","roomCategoryKey","roomCategoryId","ratePlanKey","ratePlanId","shouldClearData","Map","initializeRoomCategoryIfNeeded","has","get","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","set","selectedRatePlans","totalRooms","inventory","delete","Array","fill","size","clear","prepareBookUserServiceParams","check_in","sourceOption","arrivalTime","isEventType","getArrivalTimeForBooking","bookingData","ARRIVAL","pr_id","PR_ID","undefined","BOOKING_NUMBER","ROOMS","identifier","IDENTIFIER","Date","dateRangeData","fromDate","toDate","propertyid","GUEST","error","getBookingPreferenceRoomId","hasOwnProperty","getRoomCategoryByRoomId","_a","roomCategory","RATE_TYPE","setEditingRoomInfo","category","room_id","RATE_PLAN_ID","adultCount","ADULTS_COUNT","RATE","RATE_PLAN","NAME","iglBookPropertyCss","IglBookPropertyStyle0","IglBookProperty","initialRoomIds","showSplitBookingOption","sourceOptions","blockDatesData","ratePricingMode","bookingService","BookingService","bookPropertyService","eventsService","EventsService","adult","child","handleKeyDown","closeWindow","document","addEventListener","removeEventListener","clearBooking","stopImmediatePropagation","stopPropagation","renderPage","handleSpiltBookingSelected","getExposedBooking","language","source","setToken","token","defaultDateRange","FROM_DATE","TO_DATE","bind","setupEntries","fetchSetupEntries","setSourceOptions","allowedBookingSources","setOtherProperties","adultChildCount","CHILDREN_COUNT","roomName","roomTypeId","event_type","page","isGuestDataIncomplete","isButtonDisabled","isValidProperty","property","comparedBy","bookingSource","description","tag","SOURCE","handleAdultChildChange","initializeBookingAvailability","room_type_ids","getBookingAvailability","roomtypes","physicalrooms","getSplitBookings","splitBookingEvents","closeBookingWindow","onDateRangeSelect","opt","dateToFormattedString","handleBlockDateUpdate","handleGuestInfoUpdate","handleBookedByInfoUpdate","handleSourceDropDown","selectedSource","renderAgain","gotoSplitPageTwo","gotoPage","showSplitBooking","getPageBlockDatesView","Fragment","fromDateStr","toDateStr","entryDate","ENTRY_DATE","onDataUpdateEvent","onClick","Lcz_Cancel","handleBlockDate","Lcz_Blockdates","bookUser","buttonName","animateIrSelect","_b","animateIrButton","toast","Lcz_SelectRatePlan","title","handlePageTwoDataUpdateEvent","releaseData","getReleaseHoursString","RELEASE_AFTER_HOURS","result","blockUnit","NOTES","OPTIONAL_REASON","STAY_STATUS_CODE","OUT_OF_SERVICE","DESCRIPTION","blockedUnit","transformNewBLockedRooms","blockedCreated","setLoadingState","isLoading","STATUS_CODE","deleteEvent","POOL","serviceParams","resetBookingData","resetLoadingState","assign_units","ARRIVAL_TIME","onRoomDataUpdate","getCurrentPage","BLOCK_DATES_TITLE","TITLE","onIconClickHandler","slot","xmlns","viewBox","height","width","d","defaultDaterange","eventType","selectedRooms","adultChildConstraints","onRoomsDataUpdate","evt","propertyId","showPaymentDetails","selectedGuestData","countryNodeList","defaultGuestData","isEditOrAddRoomEvent","iglBookPropertyFooterCss","IglBookPropertyFooterStyle0","IglBookPropertyFooter","editNext","label","renderButton","disabled","shouldRenderTwoButtons","buttonClicked","Lcz_Next","isRequestPending","iglBookPropertyHeaderCss","IglBookPropertyHeaderStyle0","IglBookPropertyHeader","getSplitBookingList","Lcz_Tobooking","keys","moment","bookingDataDefaultDateRange","format","Lcz_BookingNumber","onComboboxValue","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","sourceDropDownChange","option","obj","adultChild","getAdultChildConstraints","onSelectChange","select_id","firstOption","Lcz_AdultsCaption","LabelAvailable","from","adult_max_nbr","_","i","text","child_max_nbr","renderChildCaption","btn_id","icon","Lcz_Check","onClickHanlder","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","Lcz_ChooseBookingNumber","position","initialToDate","initialFromDate","selectedFromDate","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","Lcz_PlzSelectNumberOfGuests","minDate","getTime","showSourceNode","dateLabel","Lcz_Dates","add","startOf","tax_statement","iglBookingOverviewPageCss","IglBookingOverviewPageStyle0","IglBookingOverviewPage","setMinDate","today","splitBookingId","splitBookings","roomInfo","isBookDisabled","roomTypeData","roomInfoId","roomsDataUpdate","iglBookingRoomRatePlanCss","IglBookingRoomRatePlanStyle0","IglBookingRoomRatePlan","getAvailableRooms","assignable_units","forEach","unit","Is_Fully_Available","push","updateSelectedRatePlan","ratePlanData","disableForm","shouldBeDisabled","selectedData","is_closed","totalAvailableRooms","physicalRooms","setAvailableRooms","availableRooms","selectedRoom","sort","a","b","getSelectedOffering","variations","variation","amount","adult_nbr","childrenCount","child_nbr","defaultSelectedRate","ratePlanDataChanged","newData","handleRateDaysUpdate","selectedOffering","handleInput","inputElement","inputValue","validDecimalNumber","test","substring","updateOffering","updateRate","updateGenericData","offering","numericValue","parseInt","bookProperty","gotoSplitPageTwoEvent","renderRate","split","isInputFocused","onFocus","onBlur","Lcz_Rate","checked","Lcz_Current","Lcz_Select","Lcz_Book","iglBookingRoomsCss","IglBookingRoomsStyle0","IglBookingRooms","validBookingTypes","initializeRoomData","rateplans","roomsDistributions","calculateInitialDistributions","handleRoomTypeData","distributions","selectedIndexes","sum","updatedData","handleTotalRoomsUpdate","newValue","updateRatePlanTotalRooms","ratePlanIndex","calculateTotalSelectedRoomsExcludingIndex","excludedIndex","reduce","acc","idx","newRoomsDistributions","totalSelectedRoomsExcludingCurrent","JSON","stringify","isValidBookingType","ratePlan","defaultRoomId","iglPagetwoCss","IglPagetwoStyle0","IglPagetwo","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","totalNights","rate_plan","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","categoryIdKey","updatedUnits","handleEventData","dateOption","Lcz_TotalPrice","bed_preference","Lcz_Back","btn_color","btn_styles","Lcz_Save","iglPropertyBookedByCss","IglPropertyBookedByStyle0","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","getFullYear","country","getUserDefaultCountry","bookedByData","dt","month","getMonth","handleNumberInput","numericRegex","handleEmailInput","isValidEmail","checkUser","getUserInfo","emailId","emailPattern","handleComboboxChange","clearEvent","Lcz_BookedBy","Lcz_FindEmailAddress","onInputCleared","Lcz_FirstName","Lcz_LastName","Lcz_Country","countryNode","Lcz_MobilePhone","Lcz_Isd","phone_prefix","Lcz_ContactNumber","Lcz_YourArrivalTime","time","Lcz_AnyMessageForUs","rows","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest","irInterceptorCss","IrInterceptorStyle0","IrInterceptor","setupAxiosInterceptors","axios","interceptors","request","use","handleRequest","handleError","response","handleResponse","extractEndpoint","url","isHandledEndpoint","handledEndpoints","config","extractedUrl","interceptor_requests","ExceptionMsg","trim","Error","Promise","reject","irToastCss","IrToastStyle0","IrToast","onToast","showToast","toastrOptions","positionClass","closeButton","timeOut","duration","toastr","success"],"sources":["src/components/igloo-calendar/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.css?tag=igl-booking-room-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.tsx","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.css?tag=igl-booking-rooms&encapsulation=scoped","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.css?tag=igl-pagetwo&encapsulation=scoped","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.tsx","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.tsx","src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=scoped","src/components/ir-interceptor/ir-interceptor.tsx","src/components/ir-toast/ir-toast.css?tag=ir-toast&encapsulation=scoped","src/components/ir-toast/ir-toast.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 80%;\r\n  }\r\n  .guest-info-container {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .preference-select-container {\r\n    max-width: 250px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, Watch, State, Listen } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() guestInfo: { [key: string]: any };\r\n  @Prop() currency;\r\n  @Prop({ reflect: true, mutable: true }) roomsList: { [key: string]: any }[] = [];\r\n  @Prop() guestRefKey: string;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() selectedUnits: number[] = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() defaultGuestPreference: number | null;\r\n  @Prop() index: number;\r\n  @Prop() defaultGuestRoomId: number;\r\n  @Prop() dateDifference: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() filterdRoomList = [];\r\n  @State() isButtonPressed = false;\r\n  @State() guestData: { [key: string]: any };\r\n  private userRate = 0;\r\n  private timeout: NodeJS.Timeout;\r\n\r\n  componentWillLoad() {\r\n    console.log(this.guestInfo);\r\n    if (this.guestInfo.isRateModified && this.guestInfo.rateType === 2) {\r\n      this.userRate = this.guestInfo.rate * this.dateDifference;\r\n    } else {\r\n      this.userRate = this.guestInfo.rate;\r\n    }\r\n    this.guestData = this.guestInfo ? { ...this.guestInfo } : {};\r\n    this.guestData.roomId = '';\r\n    if (this.defaultGuestRoomId && this.roomsList.filter(e => e.id.toString() === this.defaultGuestRoomId.toString()).length > 0) {\r\n      this.guestData.roomId = this.defaultGuestRoomId;\r\n    }\r\n    this.guestData.preference = +this.defaultGuestPreference || '';\r\n    this.updateRoomList();\r\n  }\r\n  componentDidLoad() {\r\n    this.timeout = setTimeout(() => {\r\n      this.updateData();\r\n    }, 200);\r\n  }\r\n  disconnectedCallback() {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  @Watch('selectedUnits')\r\n  async handleSelctedUnits() {\r\n    this.updateRoomList();\r\n  }\r\n  updateRoomList() {\r\n    const units = [...this.selectedUnits];\r\n    units[this.index] = -1;\r\n    this.filterdRoomList = this.roomsList.filter(e => !units.includes(e.id) || e.name === '');\r\n  }\r\n  updateData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      guestRefKey: this.guestRefKey,\r\n      data: { ...this.guestData },\r\n    });\r\n  }\r\n\r\n  handleDataChange(key, value) {\r\n    this.guestData[key] = +value;\r\n    if (value === '') {\r\n      this.guestData['roomName'] = value;\r\n    }\r\n    if (key === 'roomId' && value !== '') {\r\n      this.guestData['roomName'] = this.filterdRoomList.find(room => room.id === +value).name || '';\r\n    }\r\n    console.log('guest data', this.guestData);\r\n    this.updateData();\r\n  }\r\n\r\n  handleGuestNameChange(event) {\r\n    // console.log(\"On Guest name Change::\", event.target.value);\r\n    this.guestData.guestName = event.target.value;\r\n    this.updateData();\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    //console.log(this.guestInfo, this.roomsList);\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-1 \">\r\n          <div class=\" mb-1 \">\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <span class=\"h5 mr-1\">{this.guestInfo.roomCategoryName}</span>\r\n            ) : null}\r\n            <span class=\" font-weight-bold\">\r\n              {this.guestInfo.ratePlanName.replace(this.guestInfo.roomCategoryName + '/', '')}\r\n              <ir-tooltip class=\" mr-1\" message={this.guestInfo.cancelation + this.guestInfo.guarantee}></ir-tooltip>\r\n            </span>\r\n            <span>{this.guestInfo.adult_child_offering}</span>\r\n          </div>\r\n\r\n          <div class=\"d-flex flex-column flex-md-row m-0 p-0 align-items-md-center aplicationInfoContainer \">\r\n            <div class=\"mr-1 flex-fill guest-info-container\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class={`form-control ${this.isButtonPressed && this.guestData.guestName === '' && 'border-danger'}`}\r\n                placeholder={locales.entries.Lcz_GuestFirstnameAndLastname}\r\n                name=\"guestName\"\r\n                onInput={event => this.handleGuestNameChange(event)}\r\n                required\r\n                value={this.guestData.guestName}\r\n              />\r\n            </div>\r\n            <div class={'mt-1 mt-md-0 d-flex align-items-center flex-fill'}>\r\n              {calendar_data.is_frontdesk_enabled && (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') ? (\r\n                <div class=\"mr-1 p-0 flex-fill  preference-select-container\">\r\n                  <select class={`form-control  input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('roomId', (event.target as HTMLInputElement).value)}>\r\n                    <option value=\"\" selected={this.guestData.roomId === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {this.filterdRoomList.map(room => (\r\n                      <option value={room.id} selected={+this.guestData.roomId === room.id}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.guestData.is_bed_configuration_enabled && (\r\n                <div class=\"mr-1 flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm ${this.isButtonPressed && (this.guestData.preference === '' || this.guestData.preference === 0) && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('preference', (event.target as HTMLInputElement).value)}\r\n                  >\r\n                    <option value=\"\" selected={this.guestData.preference === ''}>\r\n                      {locales.entries.Lcz_BedConfiguration}\r\n                    </option>\r\n                    {this.bedPreferenceType.map(data => (\r\n                      <option value={+data.CODE_NAME} selected={this.guestData.preference === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              )}\r\n              <div class=\"\">\r\n                {getCurrencySymbol(this.currency.code) + Number(this.userRate).toFixed(2)}/{locales.entries.Lcz_Stay}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { BookUserParams } from '../../../models/igl-book-property';\r\n//import { BookingService } from '../../../services/booking.service';\r\n\r\nexport class IglBookPropertyService {\r\n  public setBookingInfoFromAutoComplete(context, res) {\r\n    context.bookedByInfoData = {\r\n      id: res.guest.id,\r\n      email: res.guest.email,\r\n      firstName: res.guest.first_name,\r\n      lastName: res.guest.last_name,\r\n      countryId: res.guest.country_id,\r\n      isdCode: res.guest.country_id.toString(),\r\n      contactNumber: res.guest.mobile,\r\n      selectedArrivalTime: res.arrival,\r\n      emailGuest: res.guest.subscribe_to_news_letter,\r\n      message: res.remark,\r\n      cardNumber: '',\r\n      cardHolderName: '',\r\n      expiryMonth: '',\r\n      expiryYear: '',\r\n      bookingNumber: res.booking_nbr,\r\n      rooms: res.rooms,\r\n      from_date: res.from_date,\r\n      to_date: res.to_date,\r\n    };\r\n  }\r\n\r\n  public resetRoomsInfoAndMessage(context) {\r\n    context.defaultData.roomsInfo = [];\r\n    context.message = '';\r\n  }\r\n\r\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\r\n    let units = selectedUnits;\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\r\n    const ratePlanKey = `p_${data.ratePlanId}`;\r\n\r\n    if (this.shouldClearData(key)) {\r\n      units = new Map();\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\r\n\r\n    if (isEditBooking) {\r\n      if (changedKey === 'rate') {\r\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\r\n    }\r\n    this.cleanupEmptyData(roomCategoryKey, units);\r\n    return units;\r\n  }\r\n\r\n  private shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (!selectedUnits.has(roomCategoryKey)) {\r\n      selectedUnits.set(roomCategoryKey, new Map());\r\n    }\r\n  }\r\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\r\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n    if (data.totalRooms === 0 || data.inventory === 0) {\r\n      selectedRatePlans.delete(ratePlanKey);\r\n    } else {\r\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\r\n    }\r\n  }\r\n\r\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (selectedUnits.has(roomCategoryKey)) {\r\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n      if (selectedRatePlans.size === 0) {\r\n        selectedUnits.delete(roomCategoryKey);\r\n      }\r\n    }\r\n  }\r\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\r\n    selectedUnits.clear();\r\n    let res = {};\r\n    if (isEdit) {\r\n      res = { ...data, guestName: name || '', roomId: '' };\r\n    } else {\r\n      res = { ...data };\r\n    }\r\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\r\n  }\r\n  async prepareBookUserServiceParams(context, check_in, sourceOption): Promise<BookUserParams> {\r\n    try {\r\n      const arrivalTime = context.isEventType('EDIT_BOOKING')\r\n        ? context.getArrivalTimeForBooking()\r\n        : context.isEventType('ADD_ROOM')\r\n        ? context.bookingData.ARRIVAL.code\r\n        : context.isEventType('SPLIT_BOOKING')\r\n        ? context.bookedByInfoData.selectedArrivalTime.code\r\n        : '';\r\n      const pr_id = context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : undefined;\r\n      const bookingNumber =\r\n        context.isEventType('EDIT_BOOKING') || context.isEventType('ADD_ROOM')\r\n          ? context.bookingData.BOOKING_NUMBER\r\n          : context.isEventType('SPLIT_BOOKING')\r\n          ? context.bookedByInfoData.bookingNumber\r\n          : undefined;\r\n      let rooms = [];\r\n      if (context.isEventType('ADD_ROOM')) {\r\n        // const result = await (context.bookingService as BookingService).getExoposedBooking(bookingNumber, context.language);\r\n        //rooms = result.rooms;\r\n        rooms = context.bookingData.ROOMS;\r\n      } else if (context.isEventType('SPLIT_BOOKING')) {\r\n        rooms = context.bookedByInfoData.rooms;\r\n      } else if (context.isEventType('EDIT_BOOKING')) {\r\n        rooms = context.defaultData.ROOMS.filter(room => room.identifier !== context.bookingData.IDENTIFIER);\r\n      }\r\n      console.log('rooms', rooms);\r\n\r\n      return [\r\n        context.bookedByInfoData,\r\n        check_in,\r\n        new Date(context.dateRangeData.fromDate),\r\n        new Date(context.dateRangeData.toDate),\r\n        context.guestData,\r\n        context.dateRangeData.dateDifference,\r\n        sourceOption,\r\n        context.propertyid,\r\n        rooms,\r\n        context.currency,\r\n        bookingNumber,\r\n        context.bookingData.GUEST,\r\n        arrivalTime,\r\n        pr_id,\r\n        context.bookingData.IDENTIFIER,\r\n      ];\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  private getBookingPreferenceRoomId(bookingData) {\r\n    return (bookingData.hasOwnProperty('PR_ID') && bookingData.PR_ID) || null;\r\n  }\r\n  private getRoomCategoryByRoomId(bookingData) {\r\n    return bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.id === bookingData.RATE_TYPE;\r\n    });\r\n  }\r\n  public setEditingRoomInfo(bookingData, selectedUnits) {\r\n    console.log(bookingData, bookingData.roomsInfo);\r\n    console.log(this.getBookingPreferenceRoomId(bookingData));\r\n    const category = this.getRoomCategoryByRoomId(bookingData);\r\n    const room_id = !category ? '' : `c_${category?.id}`;\r\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\r\n    const data = {\r\n      adultCount: bookingData.ADULTS_COUNT,\r\n      rate: bookingData.RATE,\r\n      rateType: bookingData.RATE_TYPE,\r\n      ratePlanId: bookingData.RATE_PLAN_ID,\r\n      roomCategoryId: category ? category.id : '',\r\n      roomCategoryName: category ? category.name : '',\r\n      totalRooms: 1,\r\n      ratePlanName: bookingData.RATE_PLAN,\r\n      roomId: bookingData.PR_ID,\r\n      guestName: bookingData.NAME,\r\n      cancelation: bookingData.cancelation,\r\n      guarantee: bookingData.guarantee,\r\n      adult_child_offering: bookingData.adult_child_offering,\r\n    };\r\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\r\n  }\r\n}\r\n",":host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n.block-date {\r\n  width: 100%;\r\n}\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  width: 100vw;\r\n  overflow-y: auto;\r\n}\r\n.card {\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 2000px) {\r\n  .sideWindow {\r\n    max-width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 90%;\r\n  }\r\n}\r\n@media only screen and (min-width: 600px) and (max-width: 768px) {\r\n  .sideWindow {\r\n    max-width: 75%;\r\n  }\r\n}\r\n@media only screen and (min-width: 641px) {\r\n  .block-date {\r\n    max-width: 450px;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '../../../utils/utils';\r\nimport { IEntries, RoomBlockDetails, RoomBookingDetails } from '../../../models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '../../../models/models';\r\nimport { transformNewBLockedRooms } from '../../../utils/booking';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../models/igl-book-property';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { IToast } from '@/components/ir-toast/toast';\r\n\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: { id: number; code: string };\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n\r\n  @State() adultChildCount: { adult: number; child: number } = {\r\n    adult: 0,\r\n    child: 0,\r\n  };\r\n  @State() renderAgain: boolean = false;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() defaultData: any;\r\n  @State() isLoading: string;\r\n  @State() buttonName = '';\r\n\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() bookingCreated: EventEmitter<{ pool?: string; data: RoomBookingDetails[] }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  @Event() resetBookingData: EventEmitter<null>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\r\n  private sourceOption: TSourceOption;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private eventsService = new EventsService();\r\n  private defaultDateRange: { from_date: string; to_date: string };\r\n\r\n  handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      this.closeWindow();\r\n    } else return;\r\n  }\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  @Listen('inputCleared')\r\n  clearBooking(e: CustomEvent) {\r\n    if (this.isEventType('SPLIT_BOOKING')) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.bookedByInfoData = {};\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  @Listen('spiltBookingSelected')\r\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation;\r\n    const { key, data } = e.detail;\r\n    if (key === 'select') {\r\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr, this.language);\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    } else if (key === 'blur' && data !== '') {\r\n      const res = await this.bookingService.getExposedBooking(data as string, this.language);\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    }\r\n  }\r\n  async componentWillLoad() {\r\n    this.bookingService.setToken(calendar_data.token);\r\n    this.eventsService.setToken(calendar_data.token);\r\n    this.defaultDateRange = { from_date: this.bookingData.FROM_DATE, to_date: this.bookingData.TO_DATE };\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    this.defaultData = this.bookingData;\r\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      console.log(setupEntries);\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.adultChildCount = {\r\n          adult: this.defaultData.ADULTS_COUNT,\r\n          child: this.defaultData.CHILDREN_COUNT,\r\n        };\r\n        this.initialRoomIds = {\r\n          roomName: this.defaultData.roomName,\r\n          ratePlanId: this.defaultData.RATE_PLAN_ID,\r\n          roomId: this.defaultData.PR_ID,\r\n          roomTypeId: this.defaultData.RATE_TYPE,\r\n        };\r\n        this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\r\n      }\r\n      if (!this.isEventType('BAR_BOOKING')) {\r\n        this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      }\r\n\r\n      if (this.defaultData.event_type === 'SPLIT_BOOKING') {\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n      } else if (this.defaultData.event_type === 'BLOCK_DATES') {\r\n        this.page = 'page_block_date';\r\n      } else {\r\n        this.page = 'page_one';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    console.log('fetch setup entries');\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n  isGuestDataIncomplete() {\r\n    //|| data.roomId === '' || data.roomId === 0 if the roomId is required\r\n    if (this.guestData.length === 0) {\r\n      return true;\r\n    }\r\n    console.log(this.guestData);\r\n    for (const data of this.guestData) {\r\n      if (data.guestName === '' || ((data.preference === '' || data.preference === 0) && data.is_bed_configuration_enabled)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled() {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.guestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      isValidProperty(this.guestData, 'guestName', '') ||\r\n      // isValidProperty(this.bookedByInfoData, 'isdCode', '') ||\r\n      // isValidProperty(this.bookedByInfoData, 'contactNumber', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\r\n      // isValidProperty(this.bookedByInfoData, 'countryId', -1) ||\r\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '')\r\n      // || isValidProperty(this.bookedByInfoData, 'email', '')\r\n    );\r\n  }\r\n\r\n  setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.code,\r\n      value: source.description,\r\n      tag: source.tag,\r\n      type: source.type,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.defaultData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n      };\r\n    }\r\n  }\r\n\r\n  setOtherProperties(res: any) {\r\n    this.ratePricingMode = res?.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n    this.adultChildCount = { ...event.detail };\r\n  }\r\n\r\n  async initializeBookingAvailability(from_date: string, to_date: string) {\r\n    try {\r\n      const room_type_ids = this.defaultData.roomsInfo.map(room => room.id);\r\n      const data = await this.bookingService.getBookingAvailability(from_date, to_date, this.propertyid, this.adultChildCount, this.language, room_type_ids, this.currency);\r\n      if (!this.isEventType('EDIT_BOOKING')) {\r\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      }\r\n      this.defaultData = { ...this.defaultData, roomsInfo: data.roomtypes };\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.defaultData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n\r\n  getSplitBookings() {\r\n    return (this.defaultData.hasOwnProperty('splitBookingEvents') && this.defaultData.splitBookingEvents) || [];\r\n  }\r\n  closeWindow() {\r\n    this.dateRangeData = {};\r\n    this.closeBookingWindow.emit();\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  isEventType(key: string) {\r\n    return this.defaultData.event_type === key;\r\n  }\r\n  @Listen('dateSelectEvent')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.defaultData.roomsInfo = [];\r\n      } else if (this.adultChildCount.adult !== 0) {\r\n        this.initializeBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      }\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.defaultData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n    };\r\n  }\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n  gotoPage(gotoPage) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  showSplitBooking() {\r\n    this.showSplitBookingOption = true;\r\n    this.gotoPage('page_one');\r\n  }\r\n\r\n  getPageBlockDatesView() {\r\n    return (\r\n      <Fragment>\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.defaultData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\r\n          <button class=\"btn btn-secondary flex-fill\" onClick={() => this.closeWindow()}>\r\n            {locales.entries.Lcz_Cancel}\r\n          </button>\r\n\r\n          <button class=\"btn btn-primary flex-fill\" onClick={() => this.handleBlockDate()}>\r\n            {locales.entries.Lcz_Blockdates}\r\n          </button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        this.buttonName === 'save';\r\n        break;\r\n      case 'cancel':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        this.buttonName = 'book';\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        this.buttonName = 'bookAndCheckIn';\r\n        break;\r\n      case 'next':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        if (!this.adultChildCount?.adult) {\r\n          this.animateIrSelect.emit('adult_child_select');\r\n          break;\r\n        }\r\n        if (this.selectedUnits.size > 0) {\r\n          this.gotoPage('page_two');\r\n          break;\r\n        } else {\r\n          if (this.defaultData?.roomsInfo.length === 0) {\r\n            this.animateIrButton.emit('check_availability');\r\n            break;\r\n          }\r\n        }\r\n        this.toast.emit({\r\n          type: 'error',\r\n          description: locales.entries.Lcz_SelectRatePlan,\r\n          title: locales.entries.Lcz_SelectRatePlan,\r\n        });\r\n        break;\r\n      case 'check':\r\n        this.initializeBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n  async handleBlockDate() {\r\n    const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n    const result = await this.bookingService.blockUnit({\r\n      from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\r\n      to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\r\n      NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n      pr_id: this.defaultData.PR_ID.toString(),\r\n      STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n      DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n      ...releaseData,\r\n    });\r\n    const blockedUnit = await transformNewBLockedRooms(result);\r\n    this.blockedCreated.emit(blockedUnit);\r\n    this.closeWindow();\r\n  }\r\n\r\n  async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n    console.log('edit save clicked');\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      if (this.isGuestDataIncomplete()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    } else {\r\n      if (this.isButtonDisabled()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      console.log('clicked');\r\n      if (['003', '002', '004'].includes(this.defaultData.STATUS_CODE)) {\r\n        this.eventsService.deleteEvent(this.defaultData.POOL);\r\n      }\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.bookedByInfoData.message = this.defaultData.NOTES;\r\n      }\r\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams(this, check_in, this.sourceOption);\r\n      await this.bookingService.bookUser(...serviceParams);\r\n      this.resetBookingData.emit(null);\r\n    } catch (error) {\r\n      // Handle error\r\n    } finally {\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n  setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  getArrivalTimeForBooking(): string {\r\n    return this.bookedByInfoData.arrivalTime.find(e => e.CODE_VALUE_EN === this.defaultData.ARRIVAL_TIME).CODE_NAME;\r\n  }\r\n\r\n  resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n  onRoomDataUpdate(event: CustomEvent) {\r\n    const units = this.bookPropertyService.onDataRoomUpdate(\r\n      event,\r\n      this.selectedUnits,\r\n      this.isEventType('EDIT_BOOKING'),\r\n      this.isEventType('EDIT_BOOKING') || this.isEventType('SPLIT_BOOKING') || this.isEventType('BAR_BOOKING'),\r\n      this.defaultData.NAME,\r\n    );\r\n    this.selectedUnits = new Map(units);\r\n    this.renderPage();\r\n  }\r\n  getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n  render() {\r\n    //console.log('render');\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\r\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\r\n            <div class=\"d-flex mt-2 align-items-center justify-content-between  \">\r\n              <h3 class=\"card-title text-left pb-1 font-medium-2 px-2 px-md-3\">\r\n                {this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}\r\n              </h3>\r\n              <ir-icon\r\n                class=\"close close-icon\"\r\n                onIconClickHandler={() => {\r\n                  this.closeWindow();\r\n                }}\r\n              >\r\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n                  <path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" />\r\n                </svg>\r\n              </ir-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-2 px-md-3\">\r\n            {this.getCurrentPage('page_one') && (\r\n              <igl-booking-overview-page\r\n                initialRoomIds={this.initialRoomIds}\r\n                defaultDaterange={this.defaultDateRange}\r\n                class={'p-0 mb-1'}\r\n                eventType={this.defaultData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                adultChildCount={this.adultChildCount}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                // bookingDataDefaultDateRange={this.dateRangeData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                onRoomsDataUpdate={evt => {\r\n                  this.onRoomDataUpdate(evt);\r\n                }}\r\n                sourceOptions={this.sourceOptions}\r\n                propertyId={this.propertyid}\r\n              ></igl-booking-overview-page>\r\n            )}\r\n\r\n            {this.getCurrentPage('page_two') && (\r\n              <igl-pagetwo\r\n                currency={this.currency}\r\n                propertyId={this.propertyid}\r\n                showPaymentDetails={this.showPaymentDetails}\r\n                selectedGuestData={this.guestData}\r\n                countryNodeList={this.countryNodeList}\r\n                isLoading={this.isLoading}\r\n                selectedRooms={this.selectedUnits}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                language={this.language}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                defaultGuestData={this.defaultData}\r\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              ></igl-pagetwo>\r\n            )}\r\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n:host > * {\n  margin: auto;\n  padding: auto;\n}\n\n.gap-30 {\n  gap: 30px;\n}\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { FooterButtonType, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-footer',\r\n  styleUrl: 'igl-book-property-footer.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyFooter {\r\n  @Prop() eventType: string;\r\n  @Prop() disabled: boolean = true;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  private isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  editNext(label) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      if (label === 'Cancel') {\r\n        return 'flex-fill';\r\n      } else {\r\n        return 'd-none d-md-block  flex-fill';\r\n      }\r\n    }\r\n    return 'flex-fill';\r\n  }\r\n\r\n  private renderButton(type: FooterButtonType, label: string, disabled = false) {\r\n    return (\r\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\r\n        <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\r\n          {label}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private shouldRenderTwoButtons() {\r\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex justify-content-between gap-30 align-items-center\">\r\n          {this.isEventType('EDIT_BOOKING') ? (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next} >>`, isRequestPending('/Get_Exposed_Booking_Availability'))}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next} >>`)}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\n  display: block;\n}\n.row {\n  padding: 0 0 0 15px;\n  margin: 0;\n}\n.sourceContainer {\n  max-width: 350px;\n}\n.message-label {\n  font-size: 80%;\n}\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { IToast } from '../../../ir-toast/toast';\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left mb-1  flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex text-left  align-items-center\">\r\n        <label class=\"mr-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-0 flex-fill sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, value: string) {\r\n    //const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        {/* <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label> */}\r\n        <div class=\"form-group my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group \">\r\n              {/* <select class=\"form-control input-sm\" id=\"xAdultSmallSelect\" onChange={evt => this.handleAdultChildChange('adult', evt)}>\r\n                <option value=\"\">{locales.entries.Lcz_AdultsCaption}</option>\r\n                {Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => (\r\n                  <option value={option}>{option}</option>\r\n                ))}\r\n              </select> */}\r\n              <ir-select\r\n                onSelectChange={e => this.handleAdultChildChange('adult', e.detail)}\r\n                select_id=\"adult_child_select\"\r\n                firstOption={locales.entries.Lcz_AdultsCaption}\r\n                LabelAvailable={false}\r\n                data={Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => ({\r\n                  text: option.toString(),\r\n                  value: option.toString(),\r\n                }))}\r\n              ></ir-select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1\">\r\n                {/* <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select> */}\r\n                <ir-select\r\n                  onSelectChange={e => this.handleAdultChildChange('child', e.detail)}\r\n                  select_id=\"child_select\"\r\n                  firstOption={this.renderChildCaption()}\r\n                  LabelAvailable={false}\r\n                  data={Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => ({\r\n                    text: option.toString(),\r\n                    value: option.toString(),\r\n                  }))}\r\n                ></ir-select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            btn_id=\"check_availability\"\r\n            isLoading={isRequestPending('/Get_Exposed_Booking_Availability')}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHanlder={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} < ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n        this.animateIrSelect.emit('adult_child_select');\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.animateIrSelect.emit('adult_child_select');\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {this.isEventType('SPLIT_BOOKING') && this.getSplitBookingList()}\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0  \">\r\n            <igl-date-range\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.isEventType('PLUS_BOOKING') ? moment().add(-1, 'months').startOf('month').format('YYYY-MM-DD') : this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{calendar_data.tax_statement}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background: white;\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: 100;\r\n}\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport moment from 'moment';\r\n@Component({\r\n  tag: 'igl-booking-overview-page',\r\n  styleUrl: 'igl-booking-overview-page.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingOverviewPage {\r\n  @Prop() bookingData: any;\r\n  @Prop() propertyId: number;\r\n  @Prop() message: string;\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() eventType: string;\r\n  @Prop() currency: any;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() ratePricingMode: any;\r\n  @Prop() dateRangeData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() sourceOptions: TSourceOptions[];\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() initialRoomIds: any;\r\n\r\n  @Event() roomsDataUpdate: EventEmitter;\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  setMinDate() {\r\n    if (!this.isEventType('EDIT_BOOKING')) {\r\n      return;\r\n    }\r\n    const from_date = moment(this.bookingData.FROM_DATE, 'YYYY-MM-DD');\r\n    const today = moment();\r\n    if (from_date.isAfter(today)) {\r\n      return today.add(-2, 'weeks').format('YYYY-MM-DD');\r\n    }\r\n    return from_date.add(-2, 'weeks').format('YYYY-MM-DD');\r\n  }\r\n  render() {\r\n    //console.log(this.bookingData);\r\n    return (\r\n      <Host>\r\n        <igl-book-property-header\r\n          bookedByInfoData={this.bookedByInfoData}\r\n          defaultDaterange={this.defaultDaterange}\r\n          dateRangeData={this.dateRangeData}\r\n          minDate={this.setMinDate()}\r\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\r\n          adultChildCount={this.adultChildCount}\r\n          splitBookingId={this.showSplitBookingOption}\r\n          bookingData={this.bookingData}\r\n          sourceOptions={this.sourceOptions}\r\n          message={this.message}\r\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\r\n          showSplitBookingOption={this.showSplitBookingOption}\r\n          adultChildConstraints={this.adultChildConstraints}\r\n          splitBookings={this.getSplitBookings()}\r\n          propertyId={this.propertyId}\r\n        ></igl-book-property-header>\r\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\r\n        <div class=\" text-left\">\r\n          {isRequestPending('/Get_Exposed_Booking_Availability') && this.isEventType('EDIT_BOOKING') ? (\r\n            <div class=\"loading-container\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          ) : (\r\n            <Fragment>\r\n              {this.bookingData?.roomsInfo?.map(roomInfo => {\r\n                //console.log(this.selectedRooms);\r\n                return (\r\n                  <igl-booking-rooms\r\n                    initialRoomIds={this.initialRoomIds}\r\n                    isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\r\n                    key={`room-info-${roomInfo.id}`}\r\n                    currency={this.currency}\r\n                    ratePricingMode={this.ratePricingMode}\r\n                    dateDifference={this.dateRangeData.dateDifference}\r\n                    bookingType={this.bookingData.event_type}\r\n                    roomTypeData={roomInfo}\r\n                    class=\"mt-2 mb-1 p-0\"\r\n                    roomInfoId={this.selectedRooms.has(`c_${roomInfo.id}`) ? roomInfo.id : null}\r\n                    defaultData={this.selectedRooms.get(`c_${roomInfo.id}`)}\r\n                    onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\r\n                  ></igl-booking-rooms>\r\n                );\r\n              })}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type} disabled={this.selectedRooms.size === 0}></igl-book-property-footer>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  border-left: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n.new-currency {\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.975rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.input-group-prepend span[data-state='focus'] {\r\n  border-color: var(--blue);\r\n}\r\n.input-group-prepend span[data-disabled] {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 100px;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 35%;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, State, Event, EventEmitter, Watch, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n@Component({\r\n  tag: 'igl-booking-room-rate-plan',\r\n  styleUrl: 'igl-booking-room-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRoomRatePlan {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() ratePlanData: { [key: string]: any };\r\n  @Prop() totalAvailableRooms: number;\r\n  @Prop() index: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency: any;\r\n  @Prop() physicalrooms;\r\n  @Prop() shouldBeDisabled: boolean;\r\n  @Prop() dateDifference: number;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() fullyBlocked: boolean;\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() defaultRoomId;\r\n  @Prop() selectedRoom;\r\n  @Prop() is_bed_configuration_enabled: boolean;\r\n  @State() isInputFocused = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() gotoSplitPageTwoEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedData: { [key: string]: any };\r\n  @State() ratePlanChangedState: boolean = false;\r\n  getAvailableRooms(assignable_units: any[]) {\r\n    let result = [];\r\n    assignable_units.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  componentWillLoad() {\r\n    // console.log('default data', this.defaultData);\r\n    this.updateSelectedRatePlan(this.ratePlanData);\r\n  }\r\n  disableForm() {\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      return false;\r\n    } else {\r\n      return this.selectedData.is_closed || this.totalAvailableRooms === 0 || (calendar_data.is_frontdesk_enabled && this.selectedData.physicalRooms.length === 0);\r\n    }\r\n  }\r\n\r\n  setAvailableRooms(data) {\r\n    let availableRooms = this.getAvailableRooms(data);\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      if (this.selectedRoom) {\r\n        availableRooms.push({\r\n          id: this.selectedRoom.roomId,\r\n          name: this.selectedRoom.roomName,\r\n        });\r\n        availableRooms.sort((a, b) => {\r\n          if (a.name < b.name) {\r\n            return -1;\r\n          }\r\n          if (a.name > b.name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return availableRooms;\r\n  }\r\n  getSelectedOffering(value: any) {\r\n    return this.ratePlanData.variations.find(variation => variation.adult_child_offering === value);\r\n  }\r\n\r\n  updateSelectedRatePlan(data) {\r\n    this.selectedData = {\r\n      is_bed_configuration_enabled: this.is_bed_configuration_enabled,\r\n      ratePlanId: data.id,\r\n      adult_child_offering: data.variations[data.variations.length - 1].adult_child_offering,\r\n      rateType: 1,\r\n      totalRooms: 0,\r\n      rate: data.variations[data.variations.length - 1].amount ?? 0,\r\n      ratePlanName: data.name,\r\n      adultCount: data.variations[data.variations.length - 1].adult_nbr,\r\n      childrenCount: data.variations[data.variations.length - 1].child_nbr,\r\n      cancelation: data.cancelation,\r\n      guarantee: data.guarantee,\r\n      isRateModified: false,\r\n      defaultSelectedRate: 0,\r\n      index: this.index,\r\n      is_closed: data.is_closed,\r\n      physicalRooms: this.setAvailableRooms(this.ratePlanData.assignable_units),\r\n      dateDifference: this.dateDifference,\r\n    };\r\n\r\n    if (this.defaultData) {\r\n      for (const [key, value] of Object.entries(this.defaultData)) {\r\n        this.selectedData[key] = value;\r\n      }\r\n      this.selectedData['rateType'] = 1;\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    if (this.defaultData) {\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'physicalRooms',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n  @Watch('ratePlanData')\r\n  async ratePlanDataChanged(newData) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      adult_child_offering: newData.variations[newData.variations.length - 1].adult_child_offering,\r\n      adultCount: newData.variations[newData.variations.length - 1].adult_nbr,\r\n      childrenCount: newData.variations[newData.variations.length - 1].child_nbr,\r\n      rate: this.handleRateDaysUpdate(),\r\n      physicalRooms: this.setAvailableRooms(newData.assignable_units),\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: 'rate',\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  handleRateDaysUpdate() {\r\n    if (this.selectedData.isRateModified) {\r\n      return this.selectedData.defaultSelectedRate;\r\n    }\r\n    const selectedOffering = this.getSelectedOffering(this.selectedData.adult_child_offering);\r\n    return selectedOffering ? selectedOffering.amount : 0;\r\n  }\r\n\r\n  handleInput(event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let inputValue = inputElement.value.replace(/[^0-9.]/g, '');\r\n\r\n    const validDecimalNumber = /^\\d*\\.?\\d*$/;\r\n    if (!validDecimalNumber.test(inputValue)) {\r\n      inputValue = inputValue.substring(0, inputValue.length - 1);\r\n    }\r\n\r\n    inputElement.value = inputValue;\r\n    if (inputValue) {\r\n      this.selectedData.isRateModified = true;\r\n      this.handleDataChange('rate', event);\r\n    } else {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        rate: -1,\r\n        totalRooms: 0,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'rate',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, evt) {\r\n    const value = evt.target.value;\r\n    switch (key) {\r\n      case 'adult_child_offering':\r\n        this.updateOffering(value);\r\n        break;\r\n      case 'rate':\r\n        this.updateRate(value);\r\n        break;\r\n      default:\r\n        this.updateGenericData(key, value);\r\n        break;\r\n    }\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: key,\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  updateOffering(value) {\r\n    const offering = this.getSelectedOffering(value);\r\n    if (offering) {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        adult_child_offering: value,\r\n        adultCount: offering.adult_nbr,\r\n        childrenCount: offering.child_nbr,\r\n        rate: offering.amount,\r\n        isRateModified: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  updateRate(value) {\r\n    const numericValue = value === '' ? 0 : Number(value);\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      rate: numericValue,\r\n      totalRooms: value === '' ? 0 : this.selectedData.totalRooms,\r\n      defaultSelectedRate: this.selectedData.rateType === 2 ? numericValue / this.dateDifference : numericValue,\r\n    };\r\n  }\r\n\r\n  updateGenericData(key, value) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      [key]: value === '' ? 0 : parseInt(value),\r\n    };\r\n  }\r\n  bookProperty() {\r\n    this.dataUpdateEvent.emit({ key: 'clearData', data: this.selectedData });\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } });\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  renderRate(): string | number | string[] {\r\n    if (this.selectedData.isRateModified) {\r\n      console.log('selectedData.rate', this.selectedData.rate);\r\n      return this.selectedData.rate === -1 ? '' : this.selectedData.rate;\r\n    }\r\n    return this.selectedData.rateType === 1 ? Number(this.selectedData.rate).toFixed(2) : Number(this.selectedData.rate / this.dateDifference).toFixed(2);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-column m-0 p-0 flex-lg-row align-items-lg-center justify-content-lg-between \">\r\n          <div class=\"rateplan-name-container\">\r\n            {this.bookingType === 'BAR_BOOKING' ? (\r\n              <Fragment>\r\n                <span class=\"font-weight-bold\t\">{this.ratePlanData.name.split('/')[0]}</span>\r\n                <span>/{this.ratePlanData.name.split('/')[1]}</span>\r\n              </Fragment>\r\n            ) : (\r\n              <span>{this.ratePlanData.name}</span>\r\n            )}\r\n            <ir-tooltip message={this.ratePlanData.cancelation + this.ratePlanData.guarantee}></ir-tooltip>\r\n          </div>\r\n\r\n          <div class={'d-md-flex justify-content-md-end  align-items-md-center  flex-fill rateplan-container'}>\r\n            <div class=\"mt-1 mt-lg-0 flex-fill max-w-300\">\r\n              <fieldset class=\"position-relative\">\r\n                <select disabled={this.disableForm()} class=\"form-control  input-sm\" id={v4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                  {this.ratePlanData.variations.map(variation => (\r\n                    <option value={variation.adult_child_offering} selected={this.selectedData.adult_child_offering === variation.adult_child_offering}>\r\n                      {variation.adult_child_offering}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div class={'m-0 p-0 d-flex justify-content-between ml-md-1 '}>\r\n              <div class=\" d-flex  m-0 p-0 rate-total-night-view mt-1  \">\r\n                <fieldset class=\"position-relative has-icon-left m-0 p-0 rate-input-container  \">\r\n                  <div class=\"input-group-prepend\">\r\n                    <span data-disabled={this.disableForm()} data-state={this.isInputFocused ? 'focus' : ''} class=\"input-group-text new-currency\" id=\"basic-addon1\">\r\n                      {getCurrencySymbol(this.currency.code)}\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    onFocus={() => (this.isInputFocused = true)}\r\n                    onBlur={() => (this.isInputFocused = false)}\r\n                    disabled={this.disableForm()}\r\n                    type=\"text\"\r\n                    class=\"form-control pl-0 input-sm rate-input py-0 m-0 rounded-0 rateInputBorder\"\r\n                    value={this.renderRate()}\r\n                    id={v4()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                    onInput={(event: InputEvent) => this.handleInput(event)}\r\n                  />\r\n                  {/* <span class=\"currency\">{getCurrencySymbol(this.currency.code)}</span> */}\r\n                </fieldset>\r\n                <fieldset class=\"position-relative m-0 total-nights-container p-0 \">\r\n                  <select\r\n                    disabled={this.disableForm()}\r\n                    class=\"form-control input-sm m-0 nightBorder rounded-0  py-0\"\r\n                    id={v4()}\r\n                    onChange={evt => this.handleDataChange('rateType', evt)}\r\n                  >\r\n                    {this.ratePricingMode.map(data => (\r\n                      <option value={data.CODE_NAME} selected={this.selectedData.rateType === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n\r\n              {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' ? (\r\n                <div class=\"flex-fill  mt-lg-0 ml-1 m-0 mt-1 p-0\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <select\r\n                      disabled={this.selectedData.rate === 0 || this.disableForm()}\r\n                      class=\"form-control input-sm\"\r\n                      id={v4()}\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                    >\r\n                      {Array.from({ length: this.totalAvailableRooms + 1 }, (_, i) => i).map(i => (\r\n                        <option value={i} selected={this.selectedData.totalRooms === i}>\r\n                          {i}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            {this.bookingType === 'EDIT_BOOKING' ? (\r\n              <Fragment>\r\n                <div class=\" m-0 p-0  mt-lg-0  ml-md-1 mt-md-1 d-none d-md-block\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <input\r\n                      disabled={this.disableForm()}\r\n                      type=\"radio\"\r\n                      name=\"ratePlanGroup\"\r\n                      value=\"1\"\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      checked={this.selectedData.totalRooms === 1}\r\n                    />\r\n                  </fieldset>\r\n                </div>\r\n                <button\r\n                  disabled={this.selectedData.rate === -1 || this.disableForm()}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 d-md-none \"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {this.selectedData.totalRooms === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                </button>\r\n              </Fragment>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'BAR_BOOKING' || this.bookingType === 'SPLIT_BOOKING' ? (\r\n              <button\r\n                disabled={this.selectedData.rate === -1 || this.disableForm() || (this.bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                type=\"button\"\r\n                class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 \"\r\n                onClick={() => this.bookProperty()}\r\n              >\r\n                {locales.entries.Lcz_Book}\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.margin-bottom-8 {\r\n  margin-bottom: 8px !important;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-booking-rooms',\r\n  styleUrl: 'igl-booking-rooms.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop() roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: Map<string, any>;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @Prop() isBookDisabled: boolean;\r\n  @Prop() initialRoomIds: any;\r\n  @State() roomsDistributions: number[] = [];\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  componentWillLoad() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private initializeRoomData() {\r\n    const { inventory, rateplans } = this.roomTypeData;\r\n    this.totalRooms = inventory || 0;\r\n    this.selectedRooms = new Array(rateplans.length).fill(0);\r\n    this.roomsDistributions = this.calculateInitialDistributions(rateplans, inventory);\r\n  }\r\n  @Watch('roomTypeData')\r\n  handleRoomTypeData() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private calculateInitialDistributions(rateplans, inventory) {\r\n    let distributions = new Array(rateplans.length).fill(inventory);\r\n    if (this.defaultData && this.bookingType !== 'EDIT_BOOKING' && inventory > 0) {\r\n      let selectedIndexes = [];\r\n      let sum = 0;\r\n      this.defaultData.forEach(category => {\r\n        this.selectedRooms[category.index] = category.totalRooms;\r\n        distributions[category.index] = category.totalRooms;\r\n        sum += category.totalRooms;\r\n        selectedIndexes.push(category.index);\r\n      });\r\n      if (selectedIndexes.length < distributions.length) {\r\n        distributions.forEach((_, index) => {\r\n          if (!selectedIndexes.includes(index)) {\r\n            if (sum === this.totalRooms) {\r\n              distributions[index] = 0;\r\n            } else {\r\n              distributions[index] = distributions[index] - sum;\r\n            }\r\n          } else {\r\n            if (sum < this.totalRooms) {\r\n              distributions[index] = this.totalRooms - sum + distributions[index];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      distributions.fill(inventory);\r\n    }\r\n    return distributions;\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    const {\r\n      detail: { data, changedKey },\r\n    } = event;\r\n    let updatedData = { ...data };\r\n\r\n    if (changedKey === 'totalRooms') {\r\n      this.handleTotalRoomsUpdate(index, updatedData.totalRooms);\r\n    }\r\n\r\n    updatedData = {\r\n      ...updatedData,\r\n      roomCategoryId: this.roomTypeData.id,\r\n      roomCategoryName: this.roomTypeData.name,\r\n      inventory: this.roomTypeData.inventory,\r\n    };\r\n\r\n    this.dataUpdateEvent.emit({ key: data.key, data: updatedData, changedKey });\r\n  }\r\n\r\n  private handleTotalRoomsUpdate(index: number, newValue: number) {\r\n    if (this.selectedRooms[index] !== newValue) {\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n  }\r\n\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = excludedIndex => {\r\n      return this.selectedRooms.reduce((acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc), 0);\r\n    };\r\n    const newRoomsDistributions = this.selectedRooms.map((_, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return this.roomsDistributions[index];\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent = calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms = this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n\r\n    if (JSON.stringify(this.roomsDistributions) !== JSON.stringify(newRoomsDistributions)) {\r\n      this.roomsDistributions = [...newRoomsDistributions];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && this.roomTypeData.rateplans.length > 0 && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomTypeData.name}</div>}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomTypeData.id;\r\n            let roomId = -1;\r\n            if (shouldBeDisabled && this.initialRoomIds) {\r\n              roomId = this.initialRoomIds.roomId;\r\n            }\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                is_bed_configuration_enabled={this.roomTypeData.is_bed_configuration_enabled}\r\n                index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={(this.defaultData && this.defaultData.get(`p_${ratePlan.id}`)) || null}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                onDataUpdateEvent={evt => this.onRoomDataUpdate(evt, index)}\r\n                physicalrooms={this.roomTypeData.physicalrooms}\r\n                defaultRoomId={roomId}\r\n                selectedRoom={this.initialRoomIds}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps } from '../../../models/models';\r\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../models/igl-book-property';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\nimport locales from '@/stores/locales.store';\r\n@Component({\r\n  tag: 'igl-pagetwo',\r\n  styleUrl: 'igl-pagetwo.css',\r\n  scoped: true,\r\n})\r\nexport class IglPagetwo {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop() currency;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() propertyId: number;\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: TPropertyButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n    this.selectedBookedByData = this.bookedByInfoData;\r\n  }\r\n\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\r\n      if (isRateModified && preference === 2) {\r\n        return rate * totalNights;\r\n      }\r\n      return rate;\r\n    };\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    this.selectedRooms.forEach((room, key) => {\r\n      room.forEach(rate_plan => {\r\n        newSelectedUnits[key] = rate_plan.selectedUnits;\r\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\r\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...rate_plan,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-wrap\">\r\n          <ir-date-view\r\n            class=\"mr-1 flex-fill font-weight-bold font-medium-1\"\r\n            from_date={this.dateRangeData.fromDateStr}\r\n            to_date={this.dateRangeData.toDateStr}\r\n            dateOption=\"DD MMM YYYY\"\r\n          ></ir-date-view>\r\n          {this.guestData.length > 1 && (\r\n            <div class=\"mt-1 mt-md-0 text-right\">\r\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{getCurrencySymbol(this.currency.code) + this.bookingData.TOTAL_PRICE || '$0.00'}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {this.guestData.map((roomInfo, index) => {\r\n          return (\r\n            <igl-application-info\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              defaultGuestPreference={this.defaultGuestData.bed_preference}\r\n              defaultGuestRoomId={this.defaultGuestData.PR_ID}\r\n              currency={this.currency}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              index={index}\r\n              selectedUnits={this.selectedUnits[`c_${roomInfo.roomCategoryId}`]}\r\n              guestInfo={roomInfo}\r\n              guestRefKey={index}\r\n              bookingType={this.bookingData.event_type}\r\n              roomsList={roomInfo.physicalRooms}\r\n              onDataUpdateEvent={event => this.handleEventData(event, 'application-info', index)}\r\n            ></igl-application-info>\r\n          );\r\n        })}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            propertyId={this.propertyId}\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event =>\r\n              // this.dataUpdateEvent.emit({\r\n              //   key: \"propertyBookedBy\",\r\n              //   value: event.detail,\r\n              // })\r\n              this.handleEventData(event, 'propertyBookedBy', 0)\r\n            }\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"d-flex p-0 mb-1 mt-2\">\r\n            <div class=\"flex-fill mr-2\">\r\n              {/* <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'cancel' })}>\r\n                {locales.entries.Lcz_Cancel}\r\n              </button> */}\r\n              <ir-button\r\n                icon=\"\"\r\n                text={locales.entries.Lcz_Back}\r\n                class=\"full-width\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'back' })}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'save'}\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'save' })}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                text={locales.entries.Lcz_Save}\r\n              ></ir-button>\r\n              {/* <button\r\n                disabled={this.isLoading === 'save'}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => {\r\n                  console.log('save button clicked');\r\n                  this.buttonClicked.emit({ key: 'save' });\r\n                }}\r\n              >\r\n                {this.isLoading === 'save' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Save}\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\r\n            <div class=\"flex-fill mr-md-1\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'back' })}>\r\n                <span class={'d-none d-md-inline-flex'}> &lt;&lt;</span> {locales.entries.Lcz_Back}\r\n              </button>\r\n            </div>\r\n            <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'book'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'book' })}\r\n                text={locales.entries.Lcz_Book}\r\n              ></ir-button>\r\n              {/* <button disabled={this.isLoading === 'book'} type=\"button\" class=\"btn btn-primary full-width\" onClick={() => this.buttonClicked.emit({ key: 'book' })}>\r\n                {this.isLoading === 'book' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Book}\r\n              </button> */}\r\n            </div>\r\n            {/* <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'bookAndChekcIn'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n                text={locales.entries.Lcz_BookAndChekcIn}\r\n              ></ir-button>\r\n              // <button\r\n              //   //disabled={this.isButtonDisabled('bookAndCheckIn')}\r\n              //   type=\"button\"\r\n              //   class=\"btn btn-primary full-width\"\r\n              //   onClick={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n              // >\r\n              //   {this.isLoading === 'bookAndCheckIn' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n              //   {locales.entries.Lcz_BookAndChekcIn}\r\n              // </button>\r\n            </div> */}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  /* width: calc(100% - 127px); */\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries, ICountry } from '../../../models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: '',\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.bookingService.setToken(calendar_data.token);\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: this.arrivalTimeList[0].CODE_NAME };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n    console.log('initial bookedby data', this.bookedByData);\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    this.bookedByData[key] = key === 'emailGuest' ? event.target.checked : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n    console.log(this.bookedByData);\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  async handleEmailInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n    if (this.isValidEmail(inputValue)) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (this.isValidEmail(email)) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile,\r\n            countryId: res.country_id,\r\n            isdCode: res.country_id.toString(),\r\n          };\r\n        } else {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: undefined,\r\n            firstName: '',\r\n            lastName: '',\r\n            contactNumber: '',\r\n            countryId: '',\r\n            isdCode: '',\r\n          };\r\n        }\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: { ...this.bookedByData },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  isValidEmail(emailId) {\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(emailId);\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    switch (key) {\r\n      case 'blur':\r\n        if (data !== '') {\r\n          this.bookedByData.email = data;\r\n          this.checkUser();\r\n        }\r\n        break;\r\n      case 'select':\r\n        this.bookedByData.email = data.email;\r\n        this.bookedByData = {\r\n          ...this.bookedByData,\r\n          id: data.id,\r\n          firstName: data.first_name,\r\n          lastName: data.last_name,\r\n          contactNumber: data.mobile,\r\n          countryId: data.country_id,\r\n          isdCode: data.country_id.toString(),\r\n        };\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: this.bookedByData,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData.email = '';\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0 d-flex align-items-center\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"email\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                class={'flex-fill'}\r\n                placeholder={locales.entries.Lcz_FindEmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n              ></ir-autocomplete>\r\n              <ir-tooltip class={'ml-1'} message=\"Leave empty if email is unavailable\"></ir-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => this.handleDataChange('firstName', event)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control\r\n                     \r\n                      `}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",".loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.loaderContainer {\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px;\r\n  background: white;\r\n}\r\n.loadingScreenContainer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 100000;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  pointer-events: all;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\r\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { IToast } from '../ir-toast/toast';\r\nimport interceptor_requests from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'ir-interceptor',\r\n  styleUrl: 'ir-interceptor.css',\r\n  scoped: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isUnassignedUnit = false;\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = ['/ReAllocate_Exposed_Room', '/Do_Payment', '/Get_Exposed_Bookings'];\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\r\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split('?')[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(url);\r\n  }\r\n\r\n  handleRequest(config: AxiosRequestConfig) {\r\n    const extractedUrl = this.extractEndpoint(config.url);\r\n    interceptor_requests[extractedUrl] = 'pending';\r\n    if (this.isHandledEndpoint(extractedUrl)) {\r\n      this.isLoading = true;\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response: AxiosResponse) {\r\n    const extractedUrl = this.extractEndpoint(response.config.url);\r\n    if (this.isHandledEndpoint(extractedUrl)) {\r\n      this.isLoading = false;\r\n    }\r\n    interceptor_requests[extractedUrl] = 'done';\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n      throw new Error(response.data.ExceptionMsg);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  handleError(error: string) {\r\n    this.toast.emit({\r\n      type: 'error',\r\n      title: error,\r\n      description: '',\r\n      position: 'top-right',\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.isLoading && (\r\n          <div class=\"loadingScreenContainer\">\r\n            <div class=\"loaderContainer\">\r\n              <span class=\"loader\"></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","button,\np,\nh3,\ndiv {\n  all: unset;\n}\n:host {\n  --rd-viewport-padding: 25px;\n  --rd-success: #2b9a66;\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  padding: var(--rd-viewport-padding);\n  gap: 10px;\n  max-width: 100vw;\n  margin: 0;\n  list-style: none;\n  z-index: 2147483647;\n  outline: none;\n  pointer-events: none;\n  -webkit-user-select: none;\n  user-select: none;\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    --rd-success: #33b074;\n  }\n}\np {\n  color: hsla(222.2, 84%, 4.9%, 0.8);\n  font-size: 13px;\n  line-height: 1.3;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: 500;\n  color: hsl(222.2, 84%, 4.9%);\n  font-size: 15px;\n}\n:host([position='top-left']) {\n  top: 0;\n  left: 0;\n}\n:host([position='top-right']) {\n  top: 0;\n  right: 0;\n}\n:host([position='bottom-left']) {\n  bottom: 0;\n  left: 0;\n}\n:host([position='bottom-right']) {\n  bottom: 0;\n  right: 0;\n}\n.icon-container {\n  height: 25px;\n  width: 25px;\n  border-radius: 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  /* position: absolute;\n  top: 50%;\n  right: calc(var(--rd-viewport-padding) / 2); \n  transform: translateY(-50%);*/\n}\n.icon-container > svg {\n  margin: 0;\n  color: white;\n  stroke-width: 5px;\n}\n.success {\n  background-color: var(--rd-success);\n}\n.error {\n  background-color: red;\n}\n.ToastRoot {\n  background-color: hsl(0, 0%, 100%);\n  border-radius: 0.5rem;\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\n  padding: 15px;\n  display: grid;\n  grid-template-areas: 'title action' 'description action';\n  grid-template-columns: auto max-content;\n  column-gap: 15px;\n  align-items: center;\n  pointer-events: none;\n  opacity: 0;\n  border: 1px solid hsl(214.3, 31.8%, 91.4%);\n  position: relative;\n}\n.ToastRoot[data-state='open'] {\n  pointer-events: all;\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1);\n}\n.ToastRoot[data-state='closed'] {\n  pointer-events: none;\n  animation: hide 100ms ease-in;\n}\n\n@-webkit-keyframes slideIn {\n  from {\n    transform: translateX(var(--rd-offset-width));\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n@keyframes slideIn {\n  from {\n    transform: translateX(var(--rd-offset-width));\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n.ToastTitle {\n  grid-area: title;\n  font-weight: 500;\n  color: hsl(222.2, 84%, 4.9%);\n  font-size: 15px;\n}\n\n.ToastDescription {\n  grid-area: description;\n  margin: 0;\n  margin-top: 5px;\n  color: hsla(222.2, 84%, 4.9%, 0.8);\n  font-size: 13px;\n  line-height: 1.3;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.ToastAction {\n  grid-area: action;\n}\n","import { Component, Host, Element, Listen, Prop, h, State } from '@stencil/core';\r\nimport { TPositions, IToast } from './toast';\r\n\r\n@Component({\r\n  tag: 'ir-toast',\r\n  styleUrl: 'ir-toast.css',\r\n  scoped: true,\r\n})\r\nexport class IrToast {\r\n  @Prop({ reflect: true, mutable: true }) position: TPositions = 'bottom-left';\r\n  @Element() element: HTMLElement;\r\n  @State() toasts: IToast[] = [];\r\n  @Listen('toast', { target: 'body' })\r\n  onToast(event: CustomEvent<IToast>) {\r\n    const toast: IToast = event.detail;\r\n    this.showToast(toast);\r\n  }\r\n  showToast(toast: IToast) {\r\n    const toastrOptions = {\r\n      positionClass: 'toast-top-right',\r\n      closeButton: true,\r\n      timeOut: toast.duration || 5000,\r\n    };\r\n\r\n    switch (toast.type) {\r\n      case 'success':\r\n        toastr.success(toast.title, '', toastrOptions);\r\n        break;\r\n      case 'error':\r\n        toastr.error(toast.title, '', toastrOptions);\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return <Host></Host>;\r\n  }\r\n}\r\n"],"mappings":"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"}